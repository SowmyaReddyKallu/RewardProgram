{"ast":null,"code":"import _slicedToArray from \"/Users/sowmyareddykallu/Downloads/reward-points-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/sowmyareddykallu/Downloads/reward-points-master/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/sowmyareddykallu/Downloads/reward-points-master/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport dataService from './api/dataService';\nimport ReactTable from 'react-table';\nimport \"./App.css\";\nimport _ from 'lodash';\n\nfunction calculateResults(incomingData) {\n  // Calculate points per transaction\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const pointsPerTransaction = incomingData.map(transaction => {\n    let points = 0;\n    let over100 = transaction.amt - 100;\n\n    if (over100 > 0) {\n      // A customer receives 2 points for every dollar spent over $100 in each transaction\n      points += over100 * 2;\n    }\n\n    if (transaction.amt > 50) {\n      // plus 1 point for every dollar spent over $50 in each transaction\n      points += 50;\n    }\n\n    const month = new Date(transaction.transactionDt).getMonth();\n    return _objectSpread({}, transaction, {\n      points,\n      month\n    });\n  });\n  let byCustomer = {};\n  let totalPointsByCustomer = {};\n  pointsPerTransaction.forEach(pointsPerTransaction => {\n    let custid = pointsPerTransaction.custid,\n        name = pointsPerTransaction.name,\n        month = pointsPerTransaction.month,\n        points = pointsPerTransaction.points;\n\n    if (!byCustomer[custid]) {\n      byCustomer[custid] = [];\n    }\n\n    if (!totalPointsByCustomer[custid]) {\n      totalPointsByCustomer[name] = 0;\n    }\n\n    totalPointsByCustomer[name] += points;\n\n    if (byCustomer[custid][month]) {\n      byCustomer[custid][month].points += points;\n      byCustomer[custid][month].monthNumber = month;\n      byCustomer[custid][month].numTransactions++;\n    } else {\n      byCustomer[custid][month] = {\n        custid,\n        name,\n        monthNumber: month,\n        month: months[month],\n        numTransactions: 1,\n        points\n      };\n    }\n  });\n  let tot = [];\n\n  for (var custKey in byCustomer) {\n    byCustomer[custKey].forEach(cRow => {\n      tot.push(cRow);\n    });\n  } //console.log(\"byCustomer\", byCustomer);\n  //console.log(\"tot\", tot);\n\n\n  let totByCustomer = [];\n\n  for (custKey in totalPointsByCustomer) {\n    totByCustomer.push({\n      name: custKey,\n      points: totalPointsByCustomer[custKey]\n    });\n  }\n\n  return {\n    summaryByCustomer: tot,\n    pointsPerTransaction,\n    totalPointsByCustomer: totByCustomer\n  };\n}\n\nfunction App() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        transactionData = _useState2[0],\n        setTransactionData = _useState2[1];\n\n  const columns = [{\n    Header: 'Customer',\n    accessor: 'name'\n  }, {\n    Header: 'Month',\n    accessor: 'month'\n  }, {\n    Header: \"# of Transactions\",\n    accessor: 'numTransactions'\n  }, {\n    Header: 'Reward Points',\n    accessor: 'points'\n  }];\n  const totalsByColumns = [{\n    Header: 'Customer',\n    accessor: 'name'\n  }, {\n    Header: 'Points',\n    accessor: 'points'\n  }];\n\n  function getIndividualTransactions(row) {\n    let byCustMonth = _.filter(transactionData.pointsPerTransaction, tRow => {\n      return row.original.custid === tRow.custid && row.original.monthNumber === tRow.month;\n    });\n\n    return byCustMonth;\n  } // useEffect(() => {\n  //   fetch().then((data)=> {\n  //     const results = calculateResults(data);\n  //     setTransactionData(results);\n  //   });\n  // },[]);\n\n\n  const fetchData = async () => {\n    const customerData = await dataService().then(data => data);\n    setTransactionData(customerData);\n  };\n\n  useEffect(() => {\n    fetchData();\n    console.log(fetchData());\n  }, []);\n\n  if (transactionData == null) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n\n  return transactionData == null ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Loading...\") : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, \"Points Rewards System Totals by Customer Months\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"Customer\"), \"\\u2002\", React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Name\"), \"\\u2002\", React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Amount\"), \"\\u2002\", React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Transaction\"), \"\\u2002\"), transactionData.map(({\n    custid,\n    name,\n    amt,\n    transactionDt\n  }) => {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, custid), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, name), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, amt), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, transactionDt));\n  })), \"/* \", React.createElement(ReactTable, {\n    data: transactionData.summaryByCustomer,\n    defaultPageSize: 5,\n    columns: columns,\n    SubComponent: row => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, getIndividualTransactions().map(tran => {\n        return React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-8\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, \"Transaction Date:\"), \" \", tran.transactionDt, \" - \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, \"$\"), tran.amt, \" - \", React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, \"Points: \"), tran.points)));\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), \" */\"))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"Points Rewards System Totals By Customer\"))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(ReactTable, {\n    data: transactionData.totalPointsByCustomer,\n    columns: totalsByColumns,\n    defaultPageSize: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sowmyareddykallu/Downloads/reward-points-master/src/App.js"],"names":["React","useState","useEffect","dataService","ReactTable","_","calculateResults","incomingData","months","pointsPerTransaction","map","transaction","points","over100","amt","month","Date","transactionDt","getMonth","byCustomer","totalPointsByCustomer","forEach","custid","name","monthNumber","numTransactions","tot","custKey","cRow","push","totByCustomer","summaryByCustomer","App","transactionData","setTransactionData","columns","Header","accessor","totalsByColumns","getIndividualTransactions","row","byCustMonth","filter","tRow","original","fetchData","customerData","then","data","console","log","tran"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport dataService from './api/dataService';\nimport ReactTable from 'react-table';\nimport \"./App.css\";\nimport _ from 'lodash';\n\nfunction calculateResults(incomingData) {\n  // Calculate points per transaction\n\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  const pointsPerTransaction = incomingData.map(transaction=> {\n    let points = 0;\n    let over100 = transaction.amt - 100;\n\n    if (over100 > 0) {\n      // A customer receives 2 points for every dollar spent over $100 in each transaction\n      points += (over100 * 2);\n    }\n    if (transaction.amt > 50) {\n      // plus 1 point for every dollar spent over $50 in each transaction\n      points += 50;\n    }\n    const month = new Date(transaction.transactionDt).getMonth();\n    return {...transaction, points, month};\n  });\n\n  let byCustomer = {};\n  let totalPointsByCustomer = {};\n  pointsPerTransaction.forEach(pointsPerTransaction => {\n    let {custid, name, month, points} = pointsPerTransaction;\n    if (!byCustomer[custid]) {\n      byCustomer[custid] = [];\n    }\n    if (!totalPointsByCustomer[custid]) {\n      totalPointsByCustomer[name] = 0;\n    }\n    totalPointsByCustomer[name] += points;\n    if (byCustomer[custid][month]) {\n      byCustomer[custid][month].points += points;\n      byCustomer[custid][month].monthNumber = month;\n      byCustomer[custid][month].numTransactions++;\n    }\n    else {\n\n      byCustomer[custid][month] = {\n        custid,\n        name,\n        monthNumber:month,\n        month: months[month],\n        numTransactions: 1,\n        points\n      }\n    }\n  });\n  let tot = [];\n  for (var custKey in byCustomer) {\n    byCustomer[custKey].forEach(cRow=> {\n      tot.push(cRow);\n    });\n  }\n  //console.log(\"byCustomer\", byCustomer);\n  //console.log(\"tot\", tot);\n  let totByCustomer = [];\n  for (custKey in totalPointsByCustomer) {\n    totByCustomer.push({\n      name: custKey,\n      points: totalPointsByCustomer[custKey]\n    });\n  }\n  return {\n    summaryByCustomer: tot,\n    pointsPerTransaction,\n    totalPointsByCustomer:totByCustomer\n  };\n}\n\nfunction App() {\n  const [transactionData, setTransactionData] = useState(null);\n\n  const columns = [\n    {\n      Header:'Customer',\n      accessor: 'name'\n    },\n    {\n      Header:'Month',\n      accessor: 'month'\n    },\n    {\n      Header: \"# of Transactions\",\n      accessor: 'numTransactions'\n    },\n    {\n      Header:'Reward Points',\n      accessor: 'points'\n    }\n  ];\n  const totalsByColumns = [\n    {\n      Header:'Customer',\n      accessor: 'name'\n    },\n    {\n      Header:'Points',\n      accessor: 'points'\n    }\n  ]\n\n  function getIndividualTransactions(row) {\n    let byCustMonth = _.filter(transactionData.pointsPerTransaction, (tRow)=>{\n      return row.original.custid === tRow.custid && row.original.monthNumber === tRow.month;\n    });\n    return byCustMonth;\n  }\n\n  // useEffect(() => {\n  //   fetch().then((data)=> {\n  //     const results = calculateResults(data);\n  //     setTransactionData(results);\n  //   });\n  // },[]);\n  const fetchData = async () => {\n    const customerData = await dataService().then(data => data);\n    setTransactionData(customerData);\n  }\n  useEffect(() => {\n    fetchData();\n    console.log(fetchData());\n  },[])\n\n  if (transactionData == null) {\n    return <div>Loading...</div>;\n  }\n\n  return transactionData == null ?\n    <div>Loading...</div>\n      :\n    <div>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-10\">\n            <h2>Points Rewards System Totals by Customer Months</h2>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-8\">\n          <table>\n            <tr>\n              <th>Customer</th>&ensp;\n              <th>Name</th>&ensp;\n              <th>Amount</th>&ensp;\n              <th>Transaction</th>&ensp;\n            </tr>\n            {\n              transactionData.map(({ custid, name, amt, transactionDt }) =>{\n                return(\n                  <tr>\n                    <td>{custid}</td> <br />\n                    <td>{name}</td> <br />\n                    <td>{amt}</td> <br />\n                    <td>{transactionDt}</td>\n                  </tr>\n                );\n              })\n            }\n          </table>\n            /* <ReactTable\n              data={transactionData.summaryByCustomer}\n              defaultPageSize={5}\n              columns={columns}\n              SubComponent={row => {\n                return (\n                  <div>\n\n                      {getIndividualTransactions().map(tran=>{\n                        return <div className=\"container\">\n                          <div className=\"row\">\n                            <div className=\"col-8\">\n                              <strong>Transaction Date:</strong> {tran.transactionDt} - <strong>$</strong>{tran.amt} - <strong>Points: </strong>{tran.points}\n                            </div>\n                          </div>\n                        </div>\n                      })}\n\n                  </div>\n                )\n              }}\n              /> */\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-10\">\n              <h2>Points Rewards System Totals By Customer</h2>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <ReactTable\n                data={transactionData.totalPointsByCustomer}\n                columns={totalsByColumns}\n                defaultPageSize={5}\n              />\n            </div>\n          </div>\n        </div>\n    </div>\n  ;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}